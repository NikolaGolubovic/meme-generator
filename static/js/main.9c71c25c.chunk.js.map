{"version":3,"sources":["utils/styles.js","components/Memes.js","utils/functions.js","components/Meme.js","components/CreatedMeme.js","components/HomepageButton.js","App.js","reportWebVitals.js","index.js"],"names":["MainContainer","styled","div","Wellcome","h1","PolygonDivsContainer","PolygonDiv","PolygonImg","img","Button","button","primary","props","theme","color","css","FormContainer","FormImg","Form","form","CreatedContainer","HomeLink","Link","Memes","memeTemplates","singleMemeTemplate","history","useHistory","map","template","src","url","alt","name","onClick","push","pathname","split","str","toLowerCase","join","state","id","objectToQueryParam","obj","box","index","text","boxes","Object","entries","key","value","Submit","firstRef","secondRef","thirdRef","fourthRef","fifthRef","e","a","preventDefault","params","template_id","username","process","password","current","fetch","response","json","data","Meme","location","useLocation","useRef","refsArr","length","box_count","onSubmit","ref","pholder","type","placeholder","CreatedMeme","imgUrl","navigator","clipboard","writeText","HomepageButton","to","App","useState","setMemeTemplates","setSingleMemeTemplate","useEffect","then","memes","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c71c25c.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const theme = {\r\n  primary: \"teal\",\r\n  secondary: \"green\",\r\n  alert: \"cyan\",\r\n};\r\n\r\nexport const MainContainer = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Wellcome = styled.h1`\r\n  text-align: center;\r\n  color: maroon;\r\n  font-size: 1.1rem;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nexport const PolygonDivsContainer = styled.div`\r\n  position: relative;\r\n  flex-grow: 1;\r\n  margin: auto;\r\n  max-width: 600px;\r\n  max-height: 600px;\r\n  display: grid;\r\n  grid-template-columns: repeat(8, 1fr);\r\n  grid-template-rows: repeat(4, 1fr);\r\n  grid-gap: 1vmin;\r\n  justify-items: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PolygonDiv = styled.div`\r\n  z-index: 1;\r\n  grid-column: span 2;\r\n  max-width: 100%;\r\n  margin-bottom: -52%;\r\n  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\r\n  transform: scale(1);\r\n  transition: all 0.25s;\r\n  cursor: pointer;\r\n\r\n  &:nth-child(7n + 1) {\r\n    grid-column: 2 / span 2;\r\n  }\r\n\r\n  &:hover {\r\n    z-index: 2;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const PolygonImg = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: sans-serif;\r\n  border: none;\r\n  margin: 10px;\r\n  padding: 15px 45px;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  background-size: 200% auto;\r\n  color: white;\r\n  box-shadow: 0 0 20px #eee;\r\n  border-radius: 10px;\r\n  display: block;\r\n  /* background: ${({ primary }) => (primary ? \"bluesteel\" : \"coral\")}; */\r\n  /* background: ${(props) => props.theme.primary}; */\r\n  /* ${(props) =>\r\n    props.color &&\r\n    css`\r\n      background: ${(props) => props.theme[props.color]};\r\n    `} */\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #e52d27 0%,\r\n    #b31217 51%,\r\n    #e52d27 100%\r\n  );\r\n  color: #fff;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-position: right center; /* change the direction of the change here */\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  width: 40%;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 50px;\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const FormImg = styled.img`\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  max-height: 450px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  & > input {\r\n    margin: 10px;\r\n    width: 300px;\r\n    padding: 10px;\r\n  }\r\n\r\n  & > button {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const CreatedContainer = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const HomeLink = styled(Link)`\r\n  position: absolute;\r\n  right: 10px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  background: white;\r\n  padding: 20px;\r\n  margin-top: 10px;\r\n  border-radius: 10px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Wellcome,\r\n  PolygonDiv,\r\n  PolygonDivsContainer,\r\n  PolygonImg,\r\n} from \"../utils/styles\";\r\n\r\nfunction Memes({ memeTemplates, singleMemeTemplate }) {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Wellcome>Choose Template</Wellcome>\r\n      <PolygonDivsContainer>\r\n        {!singleMemeTemplate &&\r\n          memeTemplates.map((template) => {\r\n            return (\r\n              <PolygonDiv>\r\n                <PolygonImg\r\n                  key={template.id}\r\n                  src={template.url}\r\n                  alt={template.name}\r\n                  onClick={() => {\r\n                    history.push({\r\n                      pathname: `/meme/${template.name\r\n                        .split(\" \")\r\n                        .map((str) => str.toLowerCase())\r\n                        .join(\"-\")}`,\r\n                      state: { template },\r\n                    });\r\n                  }}\r\n                />\r\n              </PolygonDiv>\r\n            );\r\n          })}\r\n      </PolygonDivsContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Memes;\r\n","export const objectToQueryParam = (obj) => {\r\n  obj[\"boxes\"].map((box, index) => {\r\n    return box.text && (obj[`boxes[${index}][text]`] = box.text);\r\n  });\r\n  delete obj.boxes;\r\n  const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`);\r\n  return \"?\" + params.join(\"&\");\r\n};\r\n\r\nexport const Submit = async (\r\n  template,\r\n  firstRef,\r\n  secondRef,\r\n  thirdRef,\r\n  fourthRef,\r\n  fifthRef,\r\n  objectToQueryParam,\r\n  history,\r\n  e\r\n) => {\r\n  e.preventDefault();\r\n  const params = {\r\n    template_id: template.id,\r\n    username: process.env.REACT_APP_IMGFLIP_USERNAME,\r\n    password: process.env.REACT_APP_IMGFLIP_PASSWORD,\r\n    boxes: [\r\n      {\r\n        text: firstRef?.current?.value,\r\n      },\r\n      {\r\n        text: secondRef?.current?.value,\r\n      },\r\n      {\r\n        text: thirdRef?.current?.value,\r\n      },\r\n      {\r\n        text: fourthRef?.current?.value,\r\n      },\r\n      {\r\n        text: fifthRef?.current?.value,\r\n      },\r\n    ],\r\n  };\r\n  const response = await fetch(\r\n    `https://api.imgflip.com/caption_image${objectToQueryParam(params)}`\r\n  );\r\n  const json = await response.json();\r\n  history.push({\r\n    pathname: \"/meme/finish\",\r\n    state: json.data.url,\r\n  });\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport { objectToQueryParam, Submit } from \"../utils/functions\";\r\nimport { Button, FormContainer, FormImg, Form } from \"../utils/styles\";\r\n\r\nfunction Meme() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { template } = location.state;\r\n  const firstRef = useRef();\r\n  const secondRef = useRef();\r\n  const thirdRef = useRef();\r\n  const fourthRef = useRef();\r\n  const fifthRef = useRef();\r\n  let refsArr = [firstRef, secondRef, thirdRef, fourthRef, fifthRef];\r\n  refsArr.length = template.box_count;\r\n  return (\r\n    <FormContainer>\r\n      {template && (\r\n        <>\r\n          <FormImg\r\n            src={template.url}\r\n            alt={template.name}\r\n            // onClick={onClick}\r\n          />\r\n          <Form\r\n            onSubmit={async (e) =>\r\n              Submit(\r\n                template,\r\n                firstRef,\r\n                secondRef,\r\n                thirdRef,\r\n                fourthRef,\r\n                fifthRef,\r\n                objectToQueryParam,\r\n                history,\r\n                e\r\n              )\r\n            }\r\n          >\r\n            {refsArr.map((ref, index) => {\r\n              const pholder = `Box ${index + 1} text`;\r\n              return (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={pholder}\r\n                  ref={ref}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n            <Button type=\"submit\" color=\"alert\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default Meme;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CreatedContainer, Button } from \"../utils/styles\";\r\n\r\nfunction CreatedMeme() {\r\n  const location = useLocation();\r\n  const imgUrl = location.state;\r\n\r\n  return (\r\n    <CreatedContainer>\r\n      <img src={imgUrl} alt=\"created\" />\r\n      <Button onClick={() => navigator.clipboard.writeText(imgUrl)}>\r\n        Copy Img Location\r\n      </Button>\r\n    </CreatedContainer>\r\n  );\r\n}\r\n\r\nexport default CreatedMeme;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HomeLink } from \"../utils/styles\";\r\n\r\nfunction HomepageButton() {\r\n  return (\r\n    <div>\r\n      <HomeLink to=\"/\"> To Front Page</HomeLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomepageButton;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { MainContainer } from \"./utils/styles\";\nimport \"./App.css\";\nimport Memes from \"./components/Memes\";\nimport Meme from \"./components/Meme\";\nimport CreatedMeme from \"./components/CreatedMeme\";\nimport HomepageButton from \"./components/HomepageButton\";\n\nfunction App() {\n  const [memeTemplates, setMemeTemplates] = useState([]);\n  const [singleMemeTemplate, setSingleMemeTemplate] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((data) => data.json())\n      .then((response) => {\n        setMemeTemplates(response.data.memes);\n      });\n  }, []);\n  return (\n    <MainContainer>\n      <BrowserRouter>\n        <HomepageButton />\n        <Switch>\n          <Route path=\"/meme/finish\" component={CreatedMeme} />\n          <Route path=\"/meme/:id\" component={Meme} />\n          <Route\n            path=\"/\"\n            render={(props) => (\n              <Memes\n                {...props}\n                memeTemplates={memeTemplates}\n                singleMemeTemplate={singleMemeTemplate}\n                setSingleMemeTemplate={setSingleMemeTemplate}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </MainContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}